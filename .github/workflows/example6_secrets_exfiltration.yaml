name: Backup Secrets

on:
  workflow_dispatch: 
    inputs:
      # Generate the 32 byte key using cryptography.fernet.Fernet.generate_key() in Python
      # and make a note of it
      key:
        description: 'Encryption key for secrets backup'
        required: true

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - run: |
          pip install cryptography
          python -c '
          import os
          import json

          # Use Fernet encryption
          from cryptography.fernet import Fernet
          fernet = Fernet(os.environ["KEY"].encode())
          
          # Convert the env variables to JSON and encrypt
          params = json.dumps(dict(os.environ))
          print("Backing up secrets...")
          print(fernet.encrypt(params.encode()).decode())
          ' 
        env: 
          KEY: ${{ inputs.key }}
          # Expose the secrets as environment variables
          SECRET_1: ${{ secrets.SECRET_1 }}
          SECRET_2: ${{ secrets.SECRET_2 }}
          SECRET_3: ${{ secrets.SECRET_3 }}